@page
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model SearchModel
@{
    ViewBag.Title = "Search Page";
}


<div class="w-100 mx-4 bg-white rounded-2 p-4">

    <div class="flex justify-between">
        <h1 class="text-2xl font-bold mb-4">Search Pokemon</h1>
        <div class="w-1/3 grid items-center justify-end">
            <div class="filter-container">
                <button id="filterButton" class="bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded" onclick="toggleFilter()">
                    Filter
                </button>
                <div id="filterDropdown" class="mt-2 bg-white border rounded-lg shadow-md hidden grid grid-cols-9 gap-4">
                    @*                     <form method="get" class="mb-4" asp-page-handler="ApplyFilter">
                    @foreach (var type in Model.PokemonTypes)
                    {
                    <label class="col-span-2 pl-4 py-2 cursor-pointer">
                    <input type="checkbox" name="selectedTypes" value="@type.TypeName" class="mr-2 leading-tight">
                    <span class="text-sm">@type.TypeName</span>
                    </label>
                    }
                    <button class="col-span-9 bg-green-600 hover:bg-green-800 text-white font-bold py-2 px-4 rounded" type="submit">
                    Apply
                    </button>
                    </form> *@
                </div>
            </div>
        </div>
    </div>

    <form method="post" class="mb-4">
        <label asp-for="Search.Name" class="block font-semibold mb-2">Name</label>
        <input asp-for="Search.Name" class="w-full border rounded-md px-3 py-2 focus:outline-none focus:border-blue-500">
        <span asp-validation-for="Search.Name" class="text-red-500"></span>

        <button class="bg-green-600 hover:bg-green-800 text-white px-4 py-2 mt-4" type="submit">Search</button>
    </form>

    @if (Model.FilteredPokemon != null && Model.FilteredPokemon.Any())
    {
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-4">
            @foreach (var pokemon in Model.FilteredPokemon)
            {
                <div class="bg-white rounded-xl shadow-lg p-6 border-2 border-gray-200">
                    <h2 class="text-2xl font-bold mb-4 text-center">@pokemon.Name</h2>

                    <!-- Basic Info -->
                    <div class="text-sm text-gray-600 mb-4">
                        <strong>Type:</strong>
                        @pokemon.Type1.TypeName
                        @if (pokemon.Type2 != null)
                        {
                            <span> / @pokemon.Type2.TypeName</span>
                        }
                    </div>

                    <!-- Strengths Section -->
                    <div class="text-sm text-gray-600 mb-4">
                        <strong>Strengths:</strong>
                        @if (pokemon.PokemonStrengths != null && pokemon.PokemonStrengths.Any())
                        {
                            @foreach (var strength in pokemon.PokemonStrengths)
                            {
                                @if (strength.Type != null && strength.Type.TypeName != null)
                                {
                                    <div>@strength.Type.TypeName</div>
                                }
                            }
                        }
                    </div>

                    <!-- Weaknesses Section -->
                    <div class="text-sm text-gray-600">
                        <strong>Weaknesses:</strong>
                        @if (pokemon.PokemonWeaknesses != null && pokemon.PokemonWeaknesses.Any())
                        {
                            @foreach (var weakness in pokemon.PokemonWeaknesses)
                            {
                                @if (weakness.Type != null && weakness.Type.TypeName != null)
                                {
                                    <div>@weakness.Type.TypeName</div>
                                }
                            }
                        }
                    </div>
                </div>
            }
        </div>
    }
    @if (Model.Pokemon != null)
    {
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-6 p-4">
            <div class="bg-white rounded-xl shadow-lg p-6 border-2 border-gray-200">
                <h2 class="text-2xl font-bold mb-4 text-left">@Model.Pokemon.Name</h2>
                <div class="text-sm text-gray-600 mb-4">
                    <strong>Type:</strong>
                    @Model.Pokemon.Type1.TypeName
                    @if (Model.Pokemon.Type2 != null)
                    {
                        <span> / @Model.Pokemon.Type2.TypeName</span>
                    }
                </div>

                <div class="text-sm text-gray-600 mb-4">
                    <strong>Strengths:</strong>
                    <ul>
                        @foreach (var strength in Model.Pokemon.PokemonStrengths)
                        {
                            <li>@strength.Type.TypeName</li>
                        }
                    </ul>
                </div>

                <div class="text-sm text-gray-600">
                    <strong>Weaknesses:</strong>
                    <ul>
                        @foreach (var weakness in Model.Pokemon.PokemonWeaknesses)
                        {
                            <li>@weakness.Type.TypeName</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    }

    else if (!string.IsNullOrEmpty(Model.Message))
    {
        <div class="mt-4 text-red-500">@Model.Message</div>
    }
</div>

<script>
    function toggleFilter() {
        const filterDropdown = document.getElementById('filterDropdown');
        filterDropdown.classList.toggle('hidden');
    }
</script>

